{
    "ARDUINO-port": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "n",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "",
        "Macro": "xxx",
        "Find Name for detection of actual macro": "ARDUINO port",
        "Name": "ARDUINO-Port",
        "Kurzbeschreibung": "ARDUINO-Port ",
        "Ausführliche Beschreibung": "ARDUINO-Port",
        "MacroStr": "",
        "Params": [
            "S_Description",
            "ARDUINO port"
        ]
    },
    "ARDUINOConfigPage": {
        "Typ": "ARDUINOConfigPage",
        "Name": "ARDUINOConfigPage",
        "MTabName": "ARDUINO\nEinstellungen",
        "Title": "ARDUINO Einstellungen",
        "Button_1": "Geänderte Einstellungen übernehmen",
        "Button_2": "Individuellen Pfad zur ARDUINO IDE verwenden",
        "Button_3": "Pfad zur ARDUINO IDE auswählen",
        "Button_4": "Individuellen Pfad zu ARDUINO Resourcen (libraries, examples) verwenden (nur MAC)",
        "Button_5": "Pfad zu ARDUINO Resourcen auswählen",
        "Kurzbeschreibung": "Einstellungsparameter",
        "Ausführliche Beschreibung": "Hier können Sie die Einstellungen für die ARDUINO IDE vornehmen. Dies wird für LINUX und Mac benötigt, aberr auch bei Windows, wenn die ARDUINO IDE nicht ins Standardverzeichnis auf C: installiert wurde.",
        "Params": [
            "ARDUINOTest",
            "!ARDUINOConnected",
            "!ARDUINOMessage",
            "!ARDUINODetect",
            "!ARDUINOParams",
            "!ARDUINOMobaLedLib"
        ]
    },
    "ARDUINOMonitorPage": {
        "Typ": "ARDUINOMonitorPage",
        "Name": "ARDUINOMonitorPage",
        "MTabName": "ARDUINO\nMonitor",
        "Title": "ARDUINO Monitor",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Message_1": "Kompilieren und Hochladen gestartet. Dies kann einige Minuten dauern. Holen Sie sich einen Kaffee :)",
        "Message_2": "Kompilieren und Hochladen erfolgreich beendet",
        "Message_3": "FEHLER beim Kompilieren und Hochladen",
        "Message_4": "Fehler: Die Arduino-Entwicklungsumgebung wurde nicht gefunden. Hier wurde gesucht:",
        "suppressLinesList": [
            "Set log4j store directory",
            " StatusLogger ",
            "serial.SerialDiscovery"
        ],
        "Win_ARDUINOIDE": [
            "C:\\Program Files (x86)\\Arduino\\arduino_debug.exe",
            "C:\\Program Files\\Arduino\\arduino_debug.exe"
        ],
        "ARDUINOIDE": "arduino",
        "Kurzbeschreibung": "ARDUINO-Monitor",
        "Ausführliche Beschreibung": "Diese Seite zeigt die Meldungen der ARDUINO-Tools beim Erzeugen des Programms und beim Hochladen an",
        "Params": []
    },
    "ColorCheckPage": {
        "Typ": "ColorCheckPage",
        "Name": "ColorCheckPage",
        "MTabName": "Farb\nTest",
        "Title": "Farben Test",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Farbtestseite",
        "Ausführliche Beschreibung": "Die Farbtestseite ermöglicht das Austesten der verschiedenen Farbkombinationen und das Erstellen einer Farbtabelle für das <SetColTab>-Macro. Die Farben können über verschiedene Wege definiert werden: Einen Farbkreis, durch direkte Eingabe der Rot-Grün-Blau-Werte, des Farbtons, der Helligkeit und Sättigung oder der Farbtemperatur.",
        "Params": [
            "ColorCheckButton_ok"
        ]
    },
    "ConfigurationPage": {
        "Typ": "ConfigurationPage",
        "Name": "ConfigurationPage",
        "MTabName": "Programm\nEinstellungen",
        "Title": "Einstellungen",
        "Button_1": "Geänderte Einstellungen übernehmen",
        "Button_2": "n",
        "Button_3": "",
        "Kurzbeschreibung": "Einstellungsparameter",
        "Ausführliche Beschreibung": "pyProgramGenerator Einstellungen\n\r\n\rHier können Sie die Grundeinstellungen für das Programm an Ihre Wünsche anpassen.",
        "Params": [
            "FontConfig",
            "FontConfig_PattGen",
            "Farbauswahl",
            "ShowProgramGenerator",
            "ShowPatternGenerator",
            "ShowHiddentables",
            "AutoLoadWorkbooks",
            "UseCOM_Port_UserForm",
            "Startseite",
            "Language",
            "LEDchannel",
            "MaxLEDcnt",
            "LEDColourCorrection",
            "RMbusTimer",
            "UseZ21Data",
            "Z21Data"

        ]
    },
    "DCCKeyboardPage": {
        "Typ": "DCCKeyboardPage",
        "Name": "DCCKeyboardPage",
        "MTabName": "DCC\nKeyboard",
        "Title": "DCC-Keyboard",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "DCC-Keyboard-Simulator",
        "Ausführliche Beschreibung": "Der DCC-Keyboard-Simulator schickt an den ARDUINO direkt Kommandos, die den Kommandos entsprechen, die der DCC-ARDUINO an den LED-ARDUINO schicken würde. Damit kann man die Funktion der DCC-Schalter austesten.\nACHTUNG: Beim ersten Tastendruck kann es etwas dauern, da der ARDUINO den Modus umschalten muss und eventuell neu verbunden wird. Manchmal reagiert der ARDUINO auch erst auf den zweiten Tastendruck",
        "Params": [
            "DCC BaseAddress"
        ]
    },
    "HelpPage": {
        "Typ": "HelpPage",
        "Name": "HelpPage",
        "MTabName": "",
        "Title": "Hilfe-Seite",
        "Kurzbeschreibung": "Hilfe-Seite",
        "Ausführliche Beschreibung": "Hilfe-Seite",
        "HelpPageURL": "https://wiki.mobaledlib.de/anleitungen/spezial/testseite"
    },
    "PatternConfiguratorPage": {
        "Typ": "PatternConfiguratorPage",
        "Name": "PatternConfiguratorPage",
        "MTabName": "Pattern\nConfigurator",
        "Title": "Pattern Configurator",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Pattern Configurator",
        "Ausführliche Beschreibung": "Zum Konfigurieren von individuellen MLL Pattern",
        "Params": [
        ]
    },
    "ProgGeneratorPage": {
        "Typ": "ProgGeneratorPage",
        "Name": "ProgGeneratorPage",
        "MTabName": "Programm\nGenerator",
        "Title": "Programm Generator",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Programm Generator",
        "Ausführliche Beschreibung": "Erzeugen von MLL Programme",
        "Params": [
         ]
    },
    "SerialMonitorPage": {
        "Typ": "SerialMonitorPage",
        "Name": "SerialMonitorPage",
        "MTabName": "Serial\nMonitor",
        "Title": "Serial Monitor",
        "Button_1": "Senden",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Serial Monitor",
        "Ausführliche Beschreibung": "Der Serial Monitor protokolliert die Kommunikation des Programms mit dem ARDUINO. Dies ist mehr für die Fehlerbehebung gedacht und für Experten.",
        "Params": [
            "SerialMonitorInput"
        ]
    },
    "ServoTestPage1": {
        "Typ": "ServoTestPage1",
        "Name": "ServoTestPage1",
        "MTabName": "Servo\nTest 1",
        "Title": "MobaLedLib LED-Servotester",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Testen und Konfigurieren von Servos",
        "Ausführliche Beschreibung": "Mit der Servoplatine von Hardi können über die MLL auch Servos angesteuert werden. Auf dieser Seite können Sie den Servo testen und konfigurieren.\nMit dem Schieberegler kann die Position des Servos eingestellt werden. Die Konfiguration des Servos erfolgt mit den Funktionen <Min- und Max-Position programmieren> und <Servo-Geschwindigkeit programmieren>",
        "Params": [
            "ServoAddress",
            "ServoLEDChannel",
            "ServoChannel"
        ]
    },
    "ServoTestPage2": {
        "Typ": "ServoTestPage2",
        "Name": "ServoTestPage2",
        "MTabName": "Servo\nTest 2",
        "Title": "MobaLedLib LED-Servotester für Direct Mode Servos",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Testen und Konfigurieren von Servos basierend auf der Direct Mode Variante von Eckhart",
        "Ausführliche Beschreibung": "Mit der Servoplatine von Hardi können über die MLL auch Servos angesteuert werden. Eckhart hat eine Variante programmiert, die auf den WS2811 chip verzichtet und eine bessere Kontrolle der Servostellung erlaubt. Auf dieser Seite können Sie den Servo testen und konfigurieren.\nMit dem Schieberegler kann die Position des Servos eingestellt werden.",
        "Params": [
            "ServoAddress",
            "!ServoStatusLEDAddress",
            "ServoLEDChannel",
            "ServoCRCold",
            "ServoControl"
        ]
    },
    "SoundCheckPage": {
        "Typ": "SoundCheckPage",
        "Name": "SoundCheckPage",
        "MTabName": "Sound\nTest",
        "Title": "Sound-Test",
        "Button_1": "Sound an ARDUINO\nschicken",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Testen des MLL-Sound-Gerätes",
        "Ausführliche Beschreibung": "Auf dieser Seite können Sie die MLL-Sound-Geräte testen. Die MLL-Soundplatine mit dem <MP3-TF-16>-Modul ermöglicht die Erzeugung von verschiedenen selbst erzeugten Geräuschen. Leider kommt es immer wieder vor, dass die wiedergegebenen Sounds nicht richtig stimmen. Es kommt nicht immer die gewünschte Sounde Datei. Das liegt an Bauteiltoleranzen. Auf der Sound-Testseite können die Werte für die verschiedenen Geräusche ausprobiert werden. Einfach die Soundmodul-Adresse angeben und in den Feldern R/G/B die verschiedenen Werte durchprobieren, bis der richtige Sound kommt.",
        "Params": [
            "SoundAddress",
            "SoundLEDChannel",
            "SoundImpulsLength",
            "Sound_LED"
        ]
    },
    "StartPage": {
        "Typ": "StartPage",
        "Name": "StartPage",
        "MTabName": "Start\n ",
        "DISCONNECT_FILENAME": "MobaLedTest_disconnect.txt",
        "CLOSE_FILENAME": "MobaLedTest_close.txt",
        "TEMP_LEDEFFECTTABLE_FILENAME": "../temp_ledeffect_table.json",
        "TEMP_WORKBOOK_FILENAME": "../temp_workbook.table",
        "InoName_DCC": "../../../examples/23_A.DCC_Interface/23_A.DCC_Interface.ino",
        "InoName_SX": "../../../examples/23_A.Selectrix_Interface/23_A.Selectrix_Interface.ino",
        "Ino_Dir_LED": "../../LEDs_AutoProg/",
        "InoName_LED": "../LEDs_AutoProg.ino",
        "FINISH_FILE": "Finished.txt",
        "Title": "Start Seite",
        "Kurzbeschreibung": "Start-Seite",
        "Photo": "Mobaled_ARDUINOs.png",
        "Ausführliche Beschreibung": "Mit MobaLedLib lassen sich auf jeder Modellbahn-Anlage Lichteffekte, animierte Figuren, Servo-Motoren und Sound-Module ansteuern. Das System basiert auf den kostengünstigen und millionenfach bewährten Arduino-Microcontrollern. Bis zu 768 Effekte können über nur eine einzige Platine angesteuert werden. Auf jeder Anlage können beliebig viele MobaLedLib-Platinen kombiniert werden. Per DCC oder CAN-BUS kann das System mit vorhandenen Steuerzentralen oder dem PC verbunden werden. Die Programmierung der Effekte erfolgt über den Programmgenerator. Weitere Details finden Sie in der Hilfe.\n\r",
        "MSG_NO_DEVICE_title": "Verbindung mit ARDUINO",
        "MSG_NO_DEVICE": "Das Programm arbeitet am besten, wenn es mit dem ARDUINO verbunden ist. \n\nEs wurde noch keine Verbindung zum ARDUINO eingestellt.\n\nWollen Sie dies jetzt tun?",
        "msg_connect_open_error_title": "Verbindung mit ARDUINO",
        "msg_connect_open_error": "Das Programm arbeitet am besten, wenn es mit dem ARDUINO verbunden ist. \n\nDer Verbindungsaufbau zum Port {} war nicht möglich.\n\nWollen Sie die ARDUINO-Auswahl öffnen und die Verbindung überprüfen?",
        "Content": {
            "MobaLedLib": "Beleuchtungskonfiguration für Dummies\n\n<ProgGenerator>:\nEinfach zu bedienende Oberfläche zur Konfiguration von Beleuchtungen und anderen Effekten für eine Modelleisenbahn.\nMit diesem Programm können die Beleuchtungs- und andere Effekte für eine Modelleisenbahn ganz einfach erstellt werden. Es können bis zu 256 RGB-LEDs oder 768 einzelne LEDs verwaltet werden.\nÜber eine einfach zu bedienende Benutzeroberfläche kann man die gewünschten Funktionen auswählen und konfigurieren. Es steht eine Vielzahl von Befehlen zur Verfügung. Der Wichtigste ist sicherlich das <Belebte Haus>. Man kann aber auch Andreaskreuze, Signale, Ampeln, Sounds, Servos und vieles mehr mit einem Klick auswählen.\nDie Effekte können automatisch gestartet oder über eine Zentrale aktiviert werden. Dazu werden momentan folgenden Protokolle/Busse unterstützt: DCC, Selectrix und der Märklin CAN-Bus.\nDas alles wird in einer übersichtlichen Tabelle verwaltet. Hier kann man ganz einfach Zeilen einfügen, verschieben, kopieren, ...\nDie Konfiguration kann ganz einfach direkt zum Arduino geschickt und ausprobiert werden. Die Programmerzeugung geschieht komplett im Hintergrund. Der Benutzer muss keinerlei Programmiererfahrung haben.\n\n=> Tabelle ausfüllen - Knopf drücken - Fertig\n\nZum Ausfüllen der Tabelle betätigt man den <Dialog> Knopf links oben. Dann fragt das Programm in mehreren Dialogen alle wichtigen Informationen ab. Zu den einzelnen Schritten werden ausführliche Erklärungen angezeigt. Zum <ProgrammGenerator> gelangt man durch klick auf den <ProgGeneratorPage>-Reiter.\n\n<PatternGenerator>:\nDer Pattern_Configurator ist neben dem Programm Generator das vielleicht mächtigste Werkzeug der MobaLedLib. Mit dem Pattern_Configurator lassen sich beliebige Beleuchtungsmuster erstellen. Dadurch können neben den vorhandenen Lichteffekten des Programm Generators beliebige neue Effekte erstellt werden. Wenn man z.B. ein spezielles Blaulicht, ein spezielles Lichtsignal, eine bestimmte Abfolge von Soundbefehlen oder auch Bewegungsabläufe von Servos benötigt, kann man dazu den Pattern_Configurator verwenden. Auch die meisten im Programm Generator enthalten Makros wurden ursprünglich mit dem Pattern_Configurator erstellt.\n\n<Farbtest>:\nErlaubt das Testen von verschiedenen Farben für die RGB-LEDs und das Erstellen der Farbtabelle für das ColTab-Macro\n\n<Soundtest>:\nermöglicht das einfache Austesten des Soundmoduls\n\n<Servo-Test>: ermöglicht das einfache Testen und Einstellen von Servos\n\n<Z21-Simulator>:\nErmöglicht die Steuerung der Effekte direkt von einer Modellbahnsteuerung, die die Roco Z21 unterstützt.\n\n<Serial Monitor>:\nErlaubt die Überwachung der seriellen Schnittstelle zum ARDUINO\n\n<ARDUINO Monitor>:\nzeigt die Rückmeldungen beim Erstellen und Hochladen des ARDUINO-Programms\n\n<ARDUINO Einstellungen>:\nSpezielle Einstellungen für Nicht-Windows Betriebssysteme für den ARDUINO\n\n<Einstellungen>:\nSpezielle Programmeinstellungen.\n\n"
        }
    },
    "VB2PYPage": {
        "Typ": "VB2PYPage",
        "Name": "VB2PYPage",
        "MTabName": "VB2PY\n ",
        "Title": "VB2PY",
        "Button_1": "Geänderte Einstellungen übernehmen",
        "Button_2": "Individuellen Pfad zum Excel ProgrammGenerator verwenden",
        "Button_3": "Pfad zum Excel ProgrammGenerator auswählen",
        "Button_4": "Pfad zu den Ergebis-Dateien",
        "Button_5": "VB2PY starten",
        "Kurzbeschreibung": "Einstellungsparameter",
        "Ausführliche Beschreibung": "VB2PY Converter",
        "Params": [
                  ]
    },
    "TestPage": {
        "Typ": "TestPage",
        "Name": "TestPage",
        "MTabName": "Test\n ",
        "Title": "Test",
        "Button_1": "Geänderte Einstellungen übernehmen",
        "Button_2": "",
        "Button_3": "Hintergrundbild einstellen",
        "Button_4": "",
        "Button_5": "Test Grafik aufrufen",
        "Kurzbeschreibung": "Einstellungsparameter",
        "Ausführliche Beschreibung": "Test",
        "Params": [
                  ]
    },
    "Z21MonitorPage": {
        "Typ": "Z21MonitorPage",
        "Name": "Z21MonitorPage",
        "MTabName": "Z21\nSimulator",
        "Title": "Z21 Simulator",
        "Button_1": "Start Simulator",
        "Button_2": "Stop Simulator",
        "Button_3": "Zeige Taster-Adressen",
        "Kurzbeschreibung": "Z21-Simulation",
        "Ausführliche Beschreibung": "Die Z21-Simulation ermöglicht die direkte Steuerung des ARDUINOS von Modellbahnsteuerungsprogrammen aus (z.B. Rocrail, iTrain, Traincontroller, WinDigiPet). Die Simulation verhält sich gegenüber dem Steuerprogramm wie eine Roco Z21-Zentrale. Wenn das Steuerproramm auf demselben Rechner läuft, findet das Steuerprogramm die Z21-Simulation unter der IP-Adresse 127.0.0.1. Das Textfeld zeigt alle gesendeten und empfangenen Kommmandos an.",
        "Params": [
            "Z21KeyTestInput"
            ]
    }
}