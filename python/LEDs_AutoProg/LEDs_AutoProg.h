// This file contains the DCC and LED definitions.
//
// It was automatically generated by the program ProgGenerator Ver. 3.3.2G      by Hardi
// File creation: 04/23/25 11:19:11
// (Attention: The display in the Arduino IDE is not updated if Options/External Editor is disabled)

#ifndef __LEDS_AUTOPROG_H__
#define __LEDS_AUTOPROG_H__

#ifndef CONFIG_ONLY
#ifndef ARDUINO_RASPBERRY_PI_PICO
#ifndef FASTLED_ESP32_I2S
#define FASTLED_INTERNAL       // Disable version number message in FastLED library (looks like an error)
#endif
#include <FastLED.h>           // The FastLED library must be installed in addition if you got the error message "..fatal error: FastLED.h: No such file or directory"
                               // Arduino IDE: Sketch / Include library / Manage libraries                    Deutsche IDE: Sketch / Bibliothek einbinden / Bibliothek verwalten
                               //              Type "FastLED" in the "Filter your search..." field                          "FastLED" in das "Grenzen Sie ihre Suche ein" Feld eingeben
                               //              Select the entry and click "Install"                                         Gefundenen Eintrag auswaehlen und "Install" anklicken
#else
#include <PicoFastLED.h>       // Juergens minimum version or FastLED for Raspberry Pico
#endif
#endif // CONFIG_ONLY

#include <MobaLedLib.h>

#define START_MSG "LEDs_AutoProg Ver 3: AM328 3.3.2G 04.23.25 11:19"

#define TWO_BUTTONS_PER_ADDRESS 1      // Two buttons (Red/Green) are used (DCC/LNet/CAN)
#ifdef NUM_LEDS
  #warning "'NUM_LEDS' definition in the main program is replaced by the included 'LEDs_AutoProg.h' with 20"
  #undef NUM_LEDS
#endif

#define NUM_LEDS 20                    // Number of LEDs (Maximal 256 RGB LEDs could be used)

#define LEDS_PER_CHANNEL ",20"

#define USE_PROTOCOL_DCC

#define RECEIVE_LED_COLOR_PER_RS232

#define GEN_BUTTON_RELEASE
#define GEN_BUTTON_RELEASE_COM GEN_OFF
// Input channel defines for local inputs and expert users


//*** Direct connected switches ***

#define START_SWITCHES_D  0                                        // Define the start number for the first mainboard switch
#define SwitchD1                0                                        // Z21-RM-Rückmelder: Adresse:1 Eingang:1
#define SwitchD2                1                                        // Z21-RM-Rückmelder: Adresse:1 Eingang:2
#define SwitchD3                2                                        // Z21-RM-Rückmelder: Adresse:1 Eingang:3

//*** Output Channels ***
#define START_VARIABLES   3                                        // Define the start number for the variables.
#define V1                      3                                        // Z21-RM-Rückmelder: Adresse:1 Eingang:4
#define V2                      4                                        // Z21-RM-Rückmelder: Adresse:1 Eingang:5
#define V3                      5                                        // Z21-RM-Rückmelder: Adresse:1 Eingang:6
#define V4                      6                                        // Z21-RM-Rückmelder: Adresse:1 Eingang:7

const PROGMEM uint8_t SwitchD_Pins[] = { 7,8,9 };                  // Array of pins which read switches 'D'
#define SWITCH_D_INP_CNT sizeof(SwitchD_Pins)


#define START_SEND_INPUTS 0                                        // Start address of all switches/variables
#define TOTAL_SEND_INPUTS 7                                        // Number of used switches/variables
#define TOTAL_SWITCHES_A  0                                        // Number of used inputs for analog keyboard
#define TOTAL_SWITCHES_B  0                                        // Number of used inputs for keyboard 1
#define TOTAL_SWITCHES_C  0                                        // Number of used inputs for keyboard 2
#define TOTAL_SWITCHES_D  3                                        // Number of used inputs for main board switches
#define TOTAL_VARIABLES   4                                        // Number of used variables
/*********************/
#define SETUP_FASTLED()                                                      \
/*********************/                                                      \
  CLEDController& controller0 = FastLED.addLeds<NEOPIXEL,  6>(leds+  0, 20); \
                                                                             \
  controller0.clearLeds(256);                                                \
  FastLED.setDither(DISABLE_DITHER);       // avoid sending slightly modified brightness values
/*End*/

#define USE_ADDITIONAL_SETUP_PROC                                  // Activate the usage of the Additional_Setup_Proc()

//--------------------------
void Additional_Setup_Proc()
//--------------------------
{

  for (uint8_t i = 0; i < SWITCH_D_INP_CNT; i++)
    pinMode(pgm_read_byte_near(&SwitchD_Pins[i]), INPUT_PULLUP);
}

/****************************/
#define Additional_Loop_Proc() \
/****************************/ \
{                              \
  for (uint8_t i = 0; i < 3; i++) \
      MobaLedLib.Set_Input(SwitchD1 + i, !digitalRead(pgm_read_byte_near(&SwitchD_Pins[i])));\
}
// ----- LED to Var -----
  #define USE_LED_TO_VAR

  #define T_EQUAL_THEN     0
  #define T_NOT_EQUAL_THEN 1
  #define T_LESS_THEN      2
  #define T_GREATER_THAN   3
  #define T_BIN_MASK       4
  #define T_NOT_BIN_MASK   5

  typedef struct
      {
      uint8_t  Var_Nr;
      uint8_t  LED_Nr;
      uint8_t  Offset_and_Typ; // ---oottt    Offset: 0..2
      uint8_t  Val;
      } __attribute__ ((packed)) LED2Var_Tab_T;

#ifdef CONFIG_ONLY
  const LED2Var_Tab_T LED2Var_Tab[] __attribute__ ((section (".MLLL2VConfig"))) =
#else
  const PROGMEM LED2Var_Tab_T LED2Var_Tab[] =
#endif
      {
        // Var name           LED_Nr LED Offset   Typ                Compare value
        { V1,                 0,     (0   << 3) | T_GREATER_THAN,    100 },
        { V2,                 0,     (2   << 3) | T_GREATER_THAN,    100 },
        { V3,                 1,     (0   << 3) | T_GREATER_THAN,    100 },
        { V4,                 1,     (2   << 3) | T_GREATER_THAN,    100 }
      };




//*******************************************************************
// *** Configuration array which defines the behavior of the LEDs ***
MobaLedLib_Configuration()
  {
  AmpelX(0, SI_1)                                                                                             /* Excel row 4                                                                                                                                                                                 */
  // LED_to_Var(V1, 0, >, 100)                                                                                /* Ampel1 Rot                                                                                                                                                                                  */
  // LED_to_Var(V2, 2, >, 100)                                                                                /* Ampel1 Grün                                                                                                                                                                                 */
  // LED_to_Var(V3, 3, >, 100)                                                                                /* Ampel2 Rot                                                                                                                                                                                  */
  // LED_to_Var(V4, 5, >, 100)                                                                                /* Ampel2 Grün                                                                                                                                                                                 */
  ConstRGB(2, V1, 0, 0, 0, 189, 65, 65)                                                                       /* Ampel1 Rot                                                                                                                                                                                  */
  ConstRGB(3, V2, 0, 0, 0, 189, 65, 65)                                                                       /* Ampel1 Grün                                                                                                                                                                                 */
  ConstRGB(4, V3, 0, 0, 0, 189, 65, 65)                                                                       /* Ampel2 Rot                                                                                                                                                                                  */
  ConstRGB(5, V4, 0, 0, 0, 189, 65, 65)                                                                       /* Ampel2 Grün                                                                                                                                                                                 */
  #define SEND_INPUTS                                                                                         /* Rückmeldung an Z21 Simulator                                                                                                                                                                */
  ConstRGB(6, SwitchD1, 0, 0, 0, 127, 127, 127)                                                               /* Excel row 14                                                                                                                                                                                */
  ConstRGB(7, SwitchD2, 0, 0, 0, 127, 127, 127)                                                               /* Excel row 15                                                                                                                                                                                */
  ConstRGB(8, SwitchD3, 0, 0, 0, 127, 127, 127)                                                               /* Excel row 16                                                                                                                                                                                */

  EndCfg // End of the configuration
  };
//*******************************************************************

#ifndef COPYLED_OFF
#define COPYLED_OFF 0
#endif

#ifndef COPYLED_OFF_ONCE
#define COPYLED_OFF_ONCE 1
#endif

//---------------------------------------------
void Set_Start_Values(MobaLedLib_C &MobaLedLib)
//---------------------------------------------
{
}


// No macros used which are stored to the EEPROM => Disable the ENABLE_STORE_STATUS flag in case it was set in the excel sheet
#ifdef ENABLE_STORE_STATUS
  #undef ENABLE_STORE_STATUS
#endif

#ifndef CONFIG_ONLY
#endif // CONFIG_ONLY





#endif // __LEDS_AUTOPROG_H__
