// This file contains the DCC and LED definitions.
//
// It was automatically generated by the program ProgGenerator Ver. 3.3.2B      by Hardi
// File creation: 06/18/24 11:48:23
// (Attention: The display in the Arduino IDE is not updated if Options/External Editor is disabled)

#ifndef __LEDS_AUTOPROG_H__
#define __LEDS_AUTOPROG_H__

#ifndef CONFIG_ONLY
#ifndef ARDUINO_RASPBERRY_PI_PICO
#define FASTLED_INTERNAL       // Disable version number message in FastLED library (looks like an error)
#include <FastLED.h>           // The FastLED library must be installed in addition if you got the error message "..fatal error: FastLED.h: No such file or directory"
                               // Arduino IDE: Sketch / Include library / Manage libraries                    Deutsche IDE: Sketch / Bibliothek einbinden / Bibliothek verwalten
                               //              Type "FastLED" in the "Filter your search..." field                          "FastLED" in das "Grenzen Sie ihre Suche ein" Feld eingeben
                               //              Select the entry and click "Install"                                         Gefundenen Eintrag auswaehlen und "Install" anklicken
#else
#include <PicoFastLED.h>       // Juergens minimum version or FastLED for Raspberry Pico
#endif
#endif // CONFIG_ONLY

#include <MobaLedLib.h>

#define START_MSG "LEDs_AutoProg Ver 1: 06.18.24 11:48"

#define TWO_BUTTONS_PER_ADDRESS 1      // Two buttons (Red/Green) are used (DCC/LNet/CAN)
#ifdef NUM_LEDS
  #warning "'NUM_LEDS' definition in the main program is replaced by the included 'LEDs_AutoProg.h' with 20"
  #undef NUM_LEDS
#endif

#define NUM_LEDS 20                    // Number of LEDs (Maximal 256 RGB LEDs could be used)

#define LEDS_PER_CHANNEL ",20"

#define USE_PROTOCOL_DCC

#define RECEIVE_LED_COLOR_PER_RS232

#define GEN_BUTTON_RELEASE
#define GEN_BUTTON_RELEASE_COM GEN_OFF
#define USE_EXT_ADDR
#define USE_RS232_OR_SPI_AS_INPUT      // Use the RS232 or SPI Input to read DCC/SX commands from the second Arduino and from the PC (The SPI is only used if enabled with USE_SPI_COM)
#define ADDR_OFFSET 0

#define ADDR_MSK  0x3FFF  // 14 Bits are used for the Address

#define S_ONOFF   (uint16_t)0
#define B_RED     (uint16_t)(1<<14)
#define B_GREEN   (uint16_t)(2<<14)
#define O_RET_MSG (uint16_t)(3<<14)    // Return messages (Rueckmelder)
#define B_TAST    B_RED


typedef struct
    {
    uint16_t AddrAndTyp; // Addr range: 0..16383. The upper two bytes are used for the type
    uint8_t  InCnt;
    } __attribute__ ((packed)) Ext_Addr_T;

// Definition of external adresses
#ifdef CONFIG_ONLY
const Ext_Addr_T Ext_Addr[] __attribute__ ((section (".MLLAddressConfig"))) =
#else
const PROGMEM Ext_Addr_T Ext_Addr[] =
#endif
         { // Addr & Typ    InCnt
           { 101  + B_RED,     2 },      // Excel row 6
           { 102  + B_RED,     2 },      // Excel row 7
         };


// Input channel defines for local inputs and expert users
#define INCH_DCC_101_RED        0      // Excel row 6
#define INCH_DCC_101_GREEN      1      //     "
#define INCH_DCC_102_RED        2      // Excel row 7
#define INCH_DCC_102_GREEN      3      //     "



#define TOTAL_SWITCHES_A  0                                        // Number of used inputs for analog keyboard
#define TOTAL_SWITCHES_B  0                                        // Number of used inputs for keyboard 1
#define TOTAL_SWITCHES_C  0                                        // Number of used inputs for keyboard 2
#define TOTAL_SWITCHES_D  0                                        // Number of used inputs for main board switches
#define TOTAL_VARIABLES   1                                        // Number of used variables
/*********************/
#define SETUP_FASTLED()                                                      \
/*********************/                                                      \
  CLEDController& controller0 = FastLED.addLeds<NEOPIXEL,  6>(leds+  0, 20); \
                                                                             \
  controller0.clearLeds(256);                                                \
  FastLED.setDither(DISABLE_DITHER);       // avoid sending slightly modified brightness values
/*End*/



//*******************************************************************
// *** Configuration array which defines the behavior of the LEDs ***
MobaLedLib_Configuration()
  {
  RGB_Heartbeat(0)                                                                                            /* Excel row 3                                                                                                                                                                                 */
  // Activation: N_Buttons #ServoAnim2B(2,2,500,20,220,2500,2500,1000,1000,1000,1000,1,0,0)                   /* Excel row 6                                                                                                                                                                                 */
  InCh_to_TmpVar(0, 2)                                                                                        /*     "                                                                                                                                                                                       */
  #define ENABLE_STORE_STATUS()                                                                               /*     "                                                                                                                                                                                       */
  APatternT1(1,28,SI_LocalVar,3,0,128,0,PM_NORMAL,500,20,1,0,65,1,0,20,1,0,60,1,0,100,1,0,140,1,0,180,1,0,220,1,0,161,1,0,220,1,0,160,1,0,220,1,0,180,1,0,140,1,0,100,1,0,60,1,0,20,1,0,64,1,0,20,1,0  ,0,0,0,0,0,0,0,0,0,63,128,0,0,0,0,0,0,0,63) /*     "                                                  */
  // Activation: N_Buttons #ServoAnim2B(2,2,500,220,20,2500,2500,1000,1000,1000,1000,2,0,0)                   /* Excel row 7                                                                                                                                                                                 */
  InCh_to_TmpVar(2, 2)                                                                                        /*     "                                                                                                                                                                                       */
  #define ENABLE_STORE_STATUS()                                                                               /*     "                                                                                                                                                                                       */
  APatternT1(2,28,SI_LocalVar,3,0,128,0,PM_NORMAL,500,220,1,0,172,1,0,220,1,0,180,1,0,140,1,0,100,1,0,60,1,0,20,1,0,65,1,0,20,1,0,97,1,0,20,1,0,60,1,0,100,1,0,140,1,0,180,1,0,220,1,0,169,1,0,220,1,0  ,0,0,0,0,0,0,0,0,0,63,128,0,0,0,0,0,0,0,63) /*     "                                                 */

  EndCfg // End of the configuration
  };
//*******************************************************************

#ifndef COPYLED_OFF
#define COPYLED_OFF 0
#endif

#ifndef COPYLED_OFF_ONCE
#define COPYLED_OFF_ONCE 1
#endif

//---------------------------------------------
void Set_Start_Values(MobaLedLib_C &MobaLedLib)
//---------------------------------------------
{
}


// if function returns TRUE the calling loop stops
typedef bool(*HandleValue_t) (uint8_t CallbackType, uint8_t ValueId, uint8_t* Value, uint16_t EEPromAddr, uint8_t TargetValueId, uint8_t Options);


#define InCnt_MSK  0x003F  // 6 bits are used for the InCnt, 2 bits for the type ttcc cccc => Max InCnt=63
#define IS_COUNTER (uint8_t)0x80
#define IS_PULSE   (uint8_t)0x40
#define IS_TOGGLE  (uint8_t)0x00
#define COUNTER_ID

typedef struct
    {
    uint8_t TypAndInCnt; // Type bits 7 & 6, InCnt 0..5
    uint8_t Channel;
    } __attribute__ ((packed)) Store_Channel_T;

// Definition of channels and counters that need to store state in EEProm
const PROGMEM Store_Channel_T Store_Values[] =
         { // Mode + InCnt , Channel
           { IS_PULSE  + 2 , INCH_DCC_101_RED    },      // Excel row 6
           { IS_PULSE  + 2 , INCH_DCC_102_RED    },      // Excel row 7
         };

#ifndef CONFIG_ONLY
#endif // CONFIG_ONLY





#endif // __LEDS_AUTOPROG_H__
